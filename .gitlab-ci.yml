stages:
  #- sonarqube
  - build
  #- cleanup_build
  #- deploy

variables:
  APP_IMG: ezpmp/product-api
  GIT_USER_NAME: devops
  ONPREM_OPS_PROJECT: on-prem
  KT_OPS_PROJECT: kt
  DEPLOY_TYPE: product-api/bluegreen
  ONPREM_DEPLOY_TYPE: product-api/bluegreen
  GIT_OPS_REPO: gitlab.ezpmp.co.kr:9443/gitops
  HARBOR_URL: harbor.ezpmp.co.kr/
cache: 
  key: maven
  paths:
    - ./.m2/repository/


# sonaqube-test:
#   variables:
#     MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
#   cache: 
#     key: maven
#     paths:
#       - ./.m2/repository/
#   before_script:
#     #- mkdir ~/.m2
#     - cp $MAVEN_SETTINGS_XML ~/.m2/settings.xml
#   image: maven:3.6.3-jdk-11
#   only:
#     - tags
#   stage: sonarqube
#   script:
#     - mvn verify
#     - mvn sonar:sonar -Dsonar.projectKey=ezpmp-api-board -Dsonar.host.url=http://192.168.10.226:32000 -Dsonar.login=95eb7ef05a90f5cf3c1a42cf09af4f606843a839




build-publish:
  before_script:
    - docker login -u "${CI_DOCKERHUB_USER}" -p "${CI_DOCKERHUB_PASSWORD}" harbor.ezpmp.co.kr
  image:
    name: gcr.io/k8s-skaffold/skaffold:latest
  only:
    - tags
  stage: build
  cache: 
    key: maven
    paths:
      - ./.m2/repository/
  script:

    - echo "CI_COMMIT_TAG:${CI_COMMIT_TAG}"
    - export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
    #- mkdir ~/.m2
    - cp $MAVEN_SETTINGS_XML ~/.m2/settings.xml
    - skaffold build -p prod -t ${CI_COMMIT_TAG} --default-repo harbor.ezpmp.co.kr

    - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
    - mv kustomize /usr/local/bin/
    - git config --global user.name $GIT_USER_NAME
    - git config --global user.email $GIT_USER_NAME"@osckorea.com"
    - git config --global http.sslverify false
    - git clone --single-branch --branch master "https://${GIT_USER_NAME}:${GIT_OPS_REPO_PWD}@${GIT_OPS_REPO}/${ONPREM_OPS_PROJECT}.git"
    - cd "${ONPREM_OPS_PROJECT}/${DEPLOY_TYPE}"
    - kustomize edit set image ${HARBOR_URL}$APP_IMG:$CI_COMMIT_TAG
    - git commit -am "update image tag" && git push origin master
    - cd ../..

    - git clone --single-branch --branch master "https://${GIT_USER_NAME}:${GIT_OPS_REPO_PWD}@${GIT_OPS_REPO}/${KT_OPS_PROJECT}.git"
    - cd "${KT_OPS_PROJECT}/${DEPLOY_TYPE}"
    - kustomize edit set image ${HARBOR_URL}$APP_IMG:$CI_COMMIT_TAG
    - git commit -am "update image tag" && git push origin master
    
# cleanup_build:
#   only:
#     - tags

#   stage: cleanup_build
#   when: always
#   script:
#     - ls
#     - rm -rf ./*

# update_manifest:
#   image:
#     name: alpine:3.8
#   stage: deploy
#   only:
#     - tags
#   when: always
#   before_script:
#     - apk add --no-cache git curl bash coreutils
#     - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
#     - mv kustomize /usr/local/bin/

#   variables:
#     GIT_STRATEGY: none
#     GIT_USER_NAME: devops
#     OPS_PROJECT: gitops
#     DEPLOY_TYPE: board-api/bluegreen
#     GIT_OPS_REPO: gitlab.ezpmp.co.kr:9443/root
#     HARBOR_URL: harbor.ezpmp.co.kr/
#   retry: 2
#   script:
#     - git config --global user.name $GIT_USER_NAME
#     - git config --global user.email $GIT_USER_NAME"@osckorea.com"
#     - git clone --single-branch --branch master "https://${GIT_USER_NAME}:${GIT_OPS_REPO_PWD}@${GIT_OPS_REPO}/${OPS_PROJECT}.git"
#     - cd "${OPS_PROJECT}/${DEPLOY_TYPE}"
#     - kustomize edit set image ${HARBOR_URL}$APP_IMG:$CI_COMMIT_TAG
#     - git commit -am "update image tag" && git push origin master
